import { addDoc, collection } from "firebase/firestore";
import { db } from "../../database";
import IUser from "../../model/IUser";
import { AppUseFormType } from "./app.setters";

export async function registerUser(newUser: IUser, states: AppUseFormType): Promise<void> {
  const { setId, setLoading } = states;

  setLoading(true);
  try {
    validateUserData(newUser);

    const dadosUsuario = newUser;

    // mais informa√ß√µes de como usar o setDoc abaixo
    //const newDoc = doc(db, "users", "meuIdManual"); //caso se tenha o ID. Pois setDoc funciona como um insert or update
    //const newDoc = doc(collection(db, "users")); // gera um doc com ID aleat√≥rio
    //await setDoc(newDoc, dadosUsuario);

    const newDoc = collection(db, "users");
    const addedDoc = await addDoc(newDoc, dadosUsuario);
    setId(addedDoc.id);
  } catch (error) {
    console.error('Error registering user:', error);
    setId(""); // Limpa o ID ap√≥s o registro
  } finally {
    setLoading(false);
  }
}

function validateUserData(user: IUser) {
  if (!user.nome || !user.idade || !user.cargo) {
    throw new Error("User data is incomplete: " + JSON.stringify(user));
  }
}

/* SETDOC
‚úÖ Trabalhar com setDoc √© ter a fun√ß√£o de "insert or update":
Se passarmos o ID e ele j√° existir na cole√ß√£o, ser√° sobrescrito.
Caso contr√°rio, ser√° criado como novo documento.

üî∏ Gerar ID manualmente:
!const newDoc = doc(db, "users", "meuIdManual");

üî∏ Ou gerar ID automaticamente:
!const newDoc = doc(collection(db, "users")); 
‚Üí Aqui o ID √© aleat√≥rio. Ainda assim, se (improvavelmente) esse ID j√° existir, ser√° atualizado.
Na pr√°tica, sempre cria um novo documento, pois a chance de colis√£o √© praticamente nula.

üî∏ Executa a grava√ß√£o:
!await setDoc(newDoc, dadosUsuario);

‚úÖ O setDoc sempre opera sobre um doc(), portanto √© necess√°rio usar doc(collection(db, "users"))
para gerar um novo documento com ID aleat√≥rio (ou doc(db, "users", "idManual") para um ID espec√≠fico).

üî∏Obtem o ID do documento processado.
! newDoc.id

*/